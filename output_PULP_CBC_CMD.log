Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - C:\Users\Pol\AppData\Local\Programs\Python\Python310\lib\site-packages\pulp\solverdir\cbc\win\64\cbc.exe C:\Users\Pol\AppData\Local\Temp\5ca794ee6a54436bbbd49d34dabc047e-pulp.mps timeMode elapsed branch printingOptions all solution C:\Users\Pol\AppData\Local\Temp\5ca794ee6a54436bbbd49d34dabc047e-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 53 COLUMNS
At line 373 RHS
At line 422 BOUNDS
At line 448 ENDATA
Problem MODEL has 48 rows, 48 columns and 268 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 33 - 0.00 seconds
Cgl0004I processed model has 39 rows, 40 columns (25 integer (25 of which binary)) and 246 elements
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.38095
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 36 iterations 5
Cbc0038I Solution found of 36
Cbc0038I Relaxing continuous gives 36
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 40 columns, reduced to 13 rows 10 columns
Cbc0038I Mini branch and bound improved solution from 36 to 35 (0.01 seconds)
Cbc0038I Round again with cutoff of 34.8
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.61018 (7) obj. 34.8 iterations 4
Cbc0038I Pass   3: suminf.    0.61018 (7) obj. 34.8 iterations 1
Cbc0038I Pass   4: suminf.    2.09999 (6) obj. 34.8 iterations 7
Cbc0038I Pass   5: suminf.    1.25715 (4) obj. 34.8 iterations 4
Cbc0038I Pass   6: suminf.    2.18948 (9) obj. 34.8 iterations 4
Cbc0038I Pass   7: suminf.    2.18948 (9) obj. 34.8 iterations 0
Cbc0038I Pass   8: suminf.    1.88572 (6) obj. 34.8 iterations 7
Cbc0038I Pass   9: suminf.    1.35511 (10) obj. 34.8 iterations 4
Cbc0038I Pass  10: suminf.    0.85718 (7) obj. 34.8 iterations 18
Cbc0038I Pass  11: suminf.    0.11429 (4) obj. 34.8 iterations 1
Cbc0038I Pass  12: suminf.    1.25715 (4) obj. 34.8 iterations 7
Cbc0038I Pass  13: suminf.    1.62163 (7) obj. 34.8 iterations 2
Cbc0038I Pass  14: suminf.    1.25715 (4) obj. 34.8 iterations 1
Cbc0038I Pass  15: suminf.    1.65717 (8) obj. 34.8 iterations 8
Cbc0038I Pass  16: suminf.    1.65717 (8) obj. 34.8 iterations 1
Cbc0038I Pass  17: suminf.    0.61018 (7) obj. 34.8 iterations 6
Cbc0038I Pass  18: suminf.    2.09999 (6) obj. 34.8 iterations 7
Cbc0038I Pass  19: suminf.    1.25715 (4) obj. 34.8 iterations 2
Cbc0038I Pass  20: suminf.    3.52001 (8) obj. 34.8 iterations 6
Cbc0038I Pass  21: suminf.    1.25715 (4) obj. 34.8 iterations 4
Cbc0038I Pass  22: suminf.    1.25715 (4) obj. 34.8 iterations 1
Cbc0038I Pass  23: suminf.    0.61018 (7) obj. 34.8 iterations 3
Cbc0038I Pass  24: suminf.    3.99996 (10) obj. 34.8 iterations 4
Cbc0038I Pass  25: suminf.    1.35715 (7) obj. 34.8 iterations 5
Cbc0038I Pass  26: suminf.    1.35511 (10) obj. 34.8 iterations 2
Cbc0038I Pass  27: suminf.    0.85718 (7) obj. 34.8 iterations 18
Cbc0038I Pass  28: suminf.    0.11429 (4) obj. 34.8 iterations 1
Cbc0038I Pass  29: suminf.    1.25715 (4) obj. 34.8 iterations 7
Cbc0038I Pass  30: suminf.    1.62163 (7) obj. 34.8 iterations 4
Cbc0038I Pass  31: suminf.    1.25715 (4) obj. 34.8 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 40 columns, reduced to 38 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 35 - took 0.02 seconds
Cbc0012I Integer solution of 35 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 39 rows 40 columns, reduced to 13 rows 10 columns
Cbc0031I 6 added rows had average density of 27.166667
Cbc0013I At root node, 6 cuts changed objective from 33 to 34.38498 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 320 row cuts average 25.9 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 107 row cuts average 22.6 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective 35, took 1190 iterations and 0 nodes (0.19 seconds)
Cbc0032I Strong branching done 14 times (90 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Cuts at root node changed objective from 33 to 37
Probing was tried 100 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
Gomory was tried 100 times and created 320 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
MixedIntegerRounding2 was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
TwoMirCuts was tried 100 times and created 107 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                35.00000000
Enumerated nodes:               0
Total iterations:               1190
Time (CPU seconds):             0.20
Time (Wallclock seconds):       0.20

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.23

